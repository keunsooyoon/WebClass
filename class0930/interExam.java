public class interExam {
    /*
    인터페이스의 장점
    1. 개발시간을 단축할 수 있다. 
        한쪽에서는 인터페이스를 만들고 다른팀은 그 내용을 구현하게 되므로 동시작업으로 개발시간을 현저히 줄일 수 있다. 

    2. 표준화가 가능하다. 
        프로젝트에 사용된 기본 틀을 인터페이스로 작성하고 개발자들에게 인터페이스를 구현하여 프로그램을 작성하도록 함으로 보다 일관성있게 정형화된 프로그램을 개발할수 있다. 

    3. 관계가 없는 클래스들도 관계를 만들어 줄수 있다. 
        서로 상속관계가 없고 같은 부모 클래스를 가지고 있지 않은 아무런 관련없는 클새드에게 하나의 인터페이스를 공통적으로 구현하도록 함으로 관계를 맺어 줄수 있다. 

    4. 독립적인 프로그래밍이 가능하다. 
        인터페이스를 이용하면 클래서 선언과 구현을 분리시킬수 있다. 따라서 실제 구현에 독립적인 프로그램을 작성하는 것이 가능해진다. 




    */
}
